version: 2

#  Copyright (C) 2018-2019 LEIDOS.
# 
#  Licensed under the Apache License, Version 2.0 (the "License"); you may not
#  use this file except in compliance with the License. You may obtain a copy of
#  the License at
# 
#  http://www.apache.org/licenses/LICENSE-2.0
# 
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#  License for the specific language governing permissions and limitations under
#  the License.

jobs:
  build:
    docker:
      - image: usdotfhwastol/carma-base-ci:2.8.3
        user: carma
        environment:
          TERM: xterm
    working_directory: "/opt/carma/"
    steps:
      - run:
          name: Create src folder
          command: |
            mkdir src
            cd src
            mkdir CARMAPlatform
            mkdir CARMAMsgs
      - checkout:
          path: src/CARMAPlatform
      - run: 
          name: Pull CARMAMsgs
          command: |
            source /opt/ros/kinetic/setup.bash
            git clone -b develop --depth 1 git@github.com:usdot-fhwa-stol/CARMAMsgs.git src/CARMAMsgs
      - run:
          name: Build CARMA
          # Using sonar cloud build wrapper for C++ analysis
          # TODO remove entrypoint line after rebuilding image
          command: |
            bash /home/carma/.base-image/entrypoint.sh
            export PATH=$PATH:/opt/sonarqube/sonar-scanner/bin/:/opt/sonarqube/build-wrapper/
            echo $PATH
            source /opt/ros/kinetic/setup.bash
            build-wrapper-linux-x86-64 --out-dir bw-output catkin_make install
      - run:
          name: Run C++ Tests
          command: |
            source /opt/ros/kinetic/setup.bash
            source /opt/carma/devel/setup.bash
            catkin_make run_tests
      - run:
          name: Run Java Tests
          command: |
            source /opt/ros/kinetic/setup.bash
            source /opt/carma/devel/setup.bash
            cd src/CARMAPlatform/carmajava/
            ./gradlew testReport --info
      - run:
          name: Save Java Test results
          command: |
            mkdir -p ~/junit/ 
            sudo mkdir -p /reports/tests
            sudo mv src/CARMAPlatform/carmajava/build/reports/allTests/* /reports/tests/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/junit/ \;
          when: always
      - run:
          name: Run Sonar Scanner
          command: |
            echo ${ENV_TEST}
            echo "PR BRANCH ${CIRCLE_BRANCH}"
            echo "PR NUM ${CIRCLE_PR_NUMBER}"
            echo "Repo name ${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}"
            echo "URL ${CIRCLE_PULL_REQUEST}"
            export PR_NUM=`echo ${CIRCLE_PULL_REQUEST} | cut -d'/' -f7`
            echo "ACTUAL NUM ${PR_NUM}"
            bash /home/carma/.base-image/entrypoint.sh
            export PATH=$PATH:/opt/sonarqube/sonar-scanner/bin/:/opt/sonarqube/build-wrapper/
            sonar-scanner -Dproject.settings=src/CARMAPlatform/.sonarqube/sonar-scanner.properties -Dsonar.login=${SONAR_SCANNER_TOKEN} -Dsonar.pullrequest.base=develop -Dsonar.pullrequest.branch=${CIRCLE_BRANCH} -Dsonar.pullrequest.key=${PR_NUM} -Dsonar.pullrequest.provider=GitHub -Dsonar.pullrequest.github.repository=${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}
      - store_test_results:
          path: ~/junit
      - store_artifacts:
          path: /reports
